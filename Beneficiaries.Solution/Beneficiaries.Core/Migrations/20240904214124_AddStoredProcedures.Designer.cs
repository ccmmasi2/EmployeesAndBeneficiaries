// <auto-generated />
using System;
using Beneficiaries.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Beneficiaries.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240904214124_AddStoredProcedures")]
    partial class AddStoredProcedures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Beneficiaries.Core.Models.BeneficiaryDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2")
                        .HasColumnName("BIRTHDAY");

                    b.Property<string>("CURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CURP");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LASTNAME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<float>("ParticipationPercentaje")
                        .HasColumnType("real")
                        .HasColumnName("PARTICIPATIONPERCENTAJE");

                    b.Property<string>("PhoneNUmber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PHONENUMBER");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SSN");

                    b.HasKey("ID");

                    b.HasIndex("CountryId");

                    b.ToTable("BENEFICIARIES");
                });

            modelBuilder.Entity("Beneficiaries.Core.Models.CountryDTO", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("ID");

                    b.ToTable("COUNTRIES");
                });

            modelBuilder.Entity("Beneficiaries.Core.Models.EmployeeDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2")
                        .HasColumnName("BIRTHDAY");

                    b.Property<string>("CURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CURP");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEENUMBER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LASTNAME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("PhoneNUmber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PHONENUMBER");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SSN");

                    b.HasKey("ID");

                    b.HasIndex("CountryId");

                    b.ToTable("EMPLOYEES");
                });

            modelBuilder.Entity("Beneficiaries.Core.Models.BeneficiaryDTO", b =>
                {
                    b.HasOne("Beneficiaries.Core.Models.CountryDTO", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Beneficiaries.Core.Models.EmployeeDTO", b =>
                {
                    b.HasOne("Beneficiaries.Core.Models.CountryDTO", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
